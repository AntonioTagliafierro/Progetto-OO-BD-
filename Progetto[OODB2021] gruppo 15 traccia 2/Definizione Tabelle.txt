CREATE TYPE SESSO_DIPENDENTE AS ENUM ('M','F','Non Specificato');
CREATE TYPE STATO_DIPENDENTE AS ENUM ('ATTIVO','NON ATTIVO');
CREATE TABLE DIPENDENTE(
    CodF CHAR(16) PRIMARY KEY,
  	Nome VARCHAR(20) NOT NULL, 
    Cognome VARCHAR(20) NOT NULL,	
	email VARCHAR(30) UNIQUE,
	dataN DATE NOT NULL,
	sesso SESSO_DIPENDENTE DEFAULT 'Non Specificato',
	numCellulare VARCHAR(15),
	status STATO_DIPENDENTE DEFAULT 'ATTIVO',
	pathFoto VARCHAR(50),
    Salario DECIMAL(12,2),
    Valutazione REAL NOT NULL DEFAULT 0,
	
	CONSTRAINT controlloCF CHECK (CodF ~* '^[A-Za-z]{6}[0-9]{2}[A-Za-z][0-9]{2}[A-Za-z][0-9]{3}[A-Za-z]$'),
	CONSTRAINT controlloNome CHECK (Nome ~* '^[A-Za-z ]+$'),
	CONSTRAINT controlloCognome CHECK (Cognome ~* '^[A-Za-z ]+$'),
	CONSTRAINT controlloEmail CHECK (email ~* '%[a-zA-Z0-9_\-]+@([a-zA-Z0-9_\-]+\.)+  (com|org|edu|it])%')
);

CREATE TABLE RESIDENZA(
	codF CHAR(16),
	città VARCHAR(15),
	provincia CHAR(2),
	cap CHAR(5),
	via VARCHAR(15),
	nCivico VARCHAR(6),
	
	CONSTRAINT fk_residenza FOREIGN KEY (codF) REFERENCES DIPENDENTE (codF)
);



CREATE TYPE STATO_PROGETTO AS ENUM ('APPROVATO','CREATO','FINITO');

CREATE TABLE PROGETTO (
    CodP SERIAL PRIMARY KEY,
	nomeProgetto VARCHAR(15) UNIQUE NOT NULL,
    Tipologia VARCHAR(30) NOT NULL,
	dataI DATE NOT NULL,
	dataF DATE,
	status STATO_PROGETTO  DEFAULT 'APPROVATO',
	nomeCliente VARCHAR(20),
    Descrizione VARCHAR(400),
	CONSTRAINT validitàdataF CHECK (dataF > dataI)
);

CREATE TABLE PARTECIPANTEPROGETTO(
    CodF CHAR(16),
    CodP INTEGER,
    Ruolo VARCHAR(30) NOT NULL,

    CONSTRAINT fk1_ParPro FOREIGN KEY (CodF) REFERENCES DIPENDENTE(CodF),
    CONSTRAINT fk2_ParPro FOREIGN KEY(CodP) REFERENCES PROGETTO(CodP),
	CONSTRAINT unicoRuolo UNIQUE (CodF,CodP)
);

CREATE TABLE AMBITO(
    nome VARCHAR(15) PRIMARY KEY
);

CREATE TABLE POSSIEDEAMBITO(
	nome VARCHAR(15),
	codP INTEGER,
	CONSTRAINT fk1_ambito FOREIGN KEY (CodP) REFERENCES PROGETTO (CodP),
	CONSTRAINT fk2_ambito FOREIGN KEY (nome) REFERENCES AMBITO (nome) 
);

CREATE TABLE SALAMEETING
(
    nomeSala VARCHAR(10) PRIMARY KEY,
    nPosti INTEGER NOT NULL
);

CREATE TABLE PIATTAFORMAMEETING(
	nomePiattaforma VARCHAR(10) PRIMARY KEY,
	nMaxDispositivi INTEGER NOT NULL
);




CREATE TABLE MEETINGFISICO(
    CodMF SERIAL PRIMARY KEY,
    dataMF DATE NOT NULL,
    OraI TIME NOT NULL,
    OraF TIME NOT NULL,
    nomeSala VARCHAR(10),

    CONSTRAINT fk_salaMeeting FOREIGN KEY (nomeSala) REFERENCES SALAMEETING(nomeSala)

);

CREATE TABLE MEETINGTELEMATICO(
    CodMT SERIAL PRIMARY KEY,
    dataMT DATE NOT NULL,
    OraI TIME NOT NULL,
    OraF TIME NOT NULL,
    nomePiattaforma VARCHAR(30) NOT NULL,

    CONSTRAINT fk_piattaformaMeeting FOREIGN KEY (nomePiattaforma)REFERENCES PIATTAFORMAMEETING(nomePiattaforma)
);





CREATE TABLE PARTECIPANTEMEETINGFISICO(
    CodF CHAR(16),
    CodMF INTEGER,

 	CONSTRAINT fk1_PMF FOREIGN KEY(CodF) REFERENCES DIPENDENTE (CodF),
    CONSTRAINT fk2_PMF FOREIGN KEY(CodMF) REFERENCES MEETINGFISICO (CodMF),
	CONSTRAINT unicitàPartecipanteF UNIQUE (CodF, CodMF)
);

CREATE TABLE PARTECIPANTEMEETINGTELEMATICO(
    CodF CHAR(16),
    CodMT INTEGER,

    CONSTRAINT fk1_MT FOREIGN KEY(CodF) REFERENCES DIPENDENTE (CodF),
	CONSTRAINT fk2_MT FOREIGN KEY(CodMT) REFERENCES MEETINGTELEMATICO (CodMT),
	CONSTRAINT unicitàPartecipanteT UNIQUE (CodF, CodMT)

);
